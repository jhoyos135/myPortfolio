@import url("https://fonts.googleapis.com/css2?family=Alegreya:ital,wght@0,400;0,600;1,400&family=Open+Sans:ital,wght@0,300;0,400;0,600;0,800;1,300&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@500&family=Roboto:ital,wght@1,300&display=swap"); /* colors */
$primary: #e3b505;
$primary_50: #e3b70518;
$secondary: #2d60b4;
$third: #b5171d;
$white: #f5f5f5;
$black: #272727;
$header: #00607a;
$line-height: 1.5;
$black-50: rgba(0, 0, 0, 0.5);
$overlay: linear-gradient(
  160deg,
  rgba(0, 0, 0, 0.3676821070224965) 0%,
  rgba(204, 204, 204, 0.47692580450148814) 26%,
  rgba(138, 138, 138, 0.4741246840533089) 52%,
  rgba(255, 255, 255, 0.4181022750897234) 72%,
  rgba(0, 0, 0, 0.4096989137451855) 100%
);
$red: #f03d43;
$blue: #0d91fd;
$gray-100: #f1f7fd;
$gray-200: #e5e5e5;
$gray-300: #a8a8a8;
$gray-disable: #e5e5e570;
$openSans: "Open Sans", sans-serif;
$alegreya: "Alegreya", serif;
$roboto: "Roboto Mono", monospace;
$herofontSize: 4em;
$letterSpacing: 3px;
:export {
  primary: $primary;
  secondary: $secondary;
  third: $third;
  white: $white;
  black: $black;
  black_50: $black-50;
  openSans: $openSans;
  alegreya: $alegreya;
  roboto: $roboto;
  header: $header;
  red: $red;
  blue: $blue;
  gray_100: $gray-100;
  gray_200: $gray-200;
  gray_300: $gray-300;
  gray_disable: $gray-disable;
  overlay: $overlay;
  heroFontSize: $herofontSize;
  letterSpacing: $letterSpacing;
  lineHeight: $line-height;
}

h1 {
  font-family: $openSans;
  font-weight: 800;
  font-size: 48px;
}
h2,
h3,
h4,
h5,
h6 {
  font-family: $openSans;
  font-weight: 600;
  font-size: 28px;
}
p {
  font-family: $alegreya;
  font-weight: 400;
  font-size: 18px;
  margin-bottom: 0;
}

a {
  color: $white;
  font-family: $roboto;
  text-decoration: none;
  &:hover {
    color: $white;
    text-decoration: none;
  }
}

button {
  &:focus {
    outline: none;
  }
}

input {
  border: none;
  border-bottom: 1px solid $black;
  margin: 0 5px;
  &:focus {
    outline: none;
    border-bottom-color: $third;
  }
}

hr {
  border: 0;
  border-top: 1px solid $gray-200;
}

@mixin custom-scroller {
  overflow-y: auto;
  overflow-x: hidden;
  scroll-behavior: smooth;

  /* width */
  &::-webkit-scrollbar {
    width: 0.7rem;
    height: 0.7rem;
  }

  /* the "track" of the scroll you can change to */
  &::-webkit-scrollbar-track {
    box-shadow: inset 0 0 0.6rem $black;
  }

  /* the buttons, top and bottom, of the scroll bar... single vs doublesided buttons */
  ::-webkit-scrollbar-button:single-button {
    height: 12px;
    display: block;
  }

  /* decrement means 'decrease', so 'less scrolling' is the "up arrow" => decrement && "down arrow" => increment */
  ::-webkit-scrollbar-button:single-button:increment {
    // background-image: url(~images/general/icons/scrollbar-arrow-down.svg);
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;
  }

  ::-webkit-scrollbar-button:single-button:decrement {
    // background-image: url(~images/general/icons/scrollbar-arrow-up.svg);
    background-repeat: no-repeat;
    background-size: contain;
    background-position: center;
  }

  /* Scroll handle (the part you drag) */
  &::-webkit-scrollbar-thumb {
    background: $black;
    border-radius: 5px;
  }

  /* Scroll handle on hover */
  &::-webkit-scrollbar-thumb:hover {
    background: $black;
  }
}
.custom-scroller {
  scroll-behavior: smooth 0.9s ease-out;
  @include custom-scroller;
}

.ReactModal__Overlay {
  z-index: 11;
  display: flex;
  justify-content: center;
  align-items: center;
}

// .react-page-controls-mode-toggle-control {
//   margin: 8px;
// }

.react-page-controls-mode-toggle-control-group {
  // opacity: 1;
  // transition: 0.5s all ease-in-out 0s;
  position: relative;
  > div {
    // pointer-events: initial;
    // justify-content: center !important;
    // align-items: center !important;
    // padding: 0px !important;
    // width: 0;
    // position: fixed !important;
    // top: 50%;
    // transform: translateY(-50%) !important;
    // right: 0;
  }
  top: 50% !important;
  transform: translateY(-50%);
  right: 0 !important;
  z-index: 4;
  bottom: 0px;
  display: block !important;
  max-height: 100%;
  position: absolute;
}

.react-page-controls-trash {
  display: none;
}

// .react-page-editable .react-page-cell-insert-new {
//   display: none !important;
// }

.react-page-editable .react-page-cell-insert-new:after {
  font-size: 3em !important;
  background-color: transparent !important;
  color: $black !important;
}
.react-page-cell-handle {
  display: none !important;
}
.react-page-cell-handle-drag-enabled {
  display: none !important;
}
.react-page-editable {
  min-height: auto !important;
}

.react-page-editable-mode-preview {
  ~ div {
    opacity: 0.2 !important;
  }
}
.react-page-controls-mode-toggle-control {
  &:last-of-type {
    display: none !important;
  }
  .react-page-controls-mode-toggle-button-inner {
    // margin: 0 !important;
    // float: right !important;
    > button {
      // border-radius: 0 !important;
      background-color: $third;
      svg {
        width: 0.8em !important;
      }
    }
  }
}
.react-page-controls-mode-toggle-control {
  .react-page-controls-mode-toggle-button-description {
    display: none !important;
  }
}

.react-page-plugins-content-slate-inline-toolbar {
  display: none;
}

.controlIsVisible {
  .react-page-controls-mode-toggle-control-group {
    opacity: 0;
    transition: 0.3s all ease-in-out 0s;
    right: -100% !important;
    visibility: hidden;
    width: 0;
    display: none !important;
    > div {
      pointer-events: none;
    }
  }
}
.reactPage-MuiIconButton-colorPrimary-300 {
  color: $third !important;
}
.reactPage-MuiIconButton-colorSecondary-301 {
  color: $red !important;
}
.reactPage-MuiSwitch-colorPrimary-315.reactPage-MuiSwitch-checked-318 {
  color: $third !important;
}
.reactPage-MuiSwitch-colorPrimary-315.reactPage-MuiSwitch-checked-318
  + .reactPage-MuiSwitch-track-322 {
  background-color: $third !important;
}

.custom_pop {
  .popover-header {
    font-size: 0.9em;
    padding: 15px;
    margin-left: 15px;
    background: $black;
    font-family: $roboto;
    letter-spacing: 5px;
    color: $white;
    border-radius: 5px;
    /* Border */
    border: 1px solid $black;

    /* Used to position the arrow */
    position: relative;
    .container__arrow--lc {
      /* Position at the left center */
      left: 0;
      top: 50%;

      /* Border */
      border-bottom: 1px solid $black;
      border-left: 1px solid $black;
      transform: translate(-50%, -50%) rotate(45deg);
    }
    .container__arrow {
      /* Size */
      height: 16px;
      width: 16px;
      z-index: -1;

      background-color: $black;
      position: absolute;
    }
  }
}

.App {
  a:hover ~ .cursor,
  h1:hover ~ .cursor {
    transform: scale(5) !important;
  }
  .cursor {
    div:first-child {
      background-color: #fff !important;
      mix-blend-mode: difference;
    }
    div:last-child {
      // background-color: #000 !important;
      mix-blend-mode: difference;
    }
  }
}
